{"version":3,"sources":["hoc/Dashboard/Dashboard.js","components/AnswerItem/AnswerItem.js","components/AnswerList/AnswerList.js","components/QuestionBlock/QuestionBlock.js","components/FinishedLayout/FinishedLayout.js","components/Quiz/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["Dashboard","className","this","props","children","Component","AnswerItem","answers","answerState","push","join","onClick","onAnswerClick","answer","id","text","AnswerList","map","answerId","key","QuestionBlock","title","currentQuestion","totalLength","FinishedLayouts","result","onRetry","Quiz","state","finished","questions","correctAnswer","activeQuestion","console","log","setState","timeout","window","setTimeout","isGameFinished","clearTimeout","length","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe42086d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <section className='dashboard'>\r\n                {this.props.children}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n    const answers = []\r\n    if (props.answerState) {\r\n        answers.push(props.answerState)\r\n    }\r\n    return (\r\n        <li className={`answer-item ${answers.join('')}`}\r\n            onClick={() => props.onAnswerClick(props.answer.id)} >\r\n            {props.answer.text}\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport AnswerItem from '../AnswerItem/AnswerItem';\r\nimport './AnswerList.css';\r\n\r\nconst AnswerList = props => (\r\n    <ul className='answer-list'>\r\n        {props.answers.map((answer, answerId) => {\r\n            return (\r\n                <AnswerItem\r\n                    key={answerId}\r\n                    answer={props.answers[answerId]}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    answerState={props.answerState ? props.answerState[answer.id] : null}\r\n                />\r\n            )\r\n        })\r\n        }\r\n\r\n    </ul>\r\n\r\n)\r\n\r\nexport default AnswerList;","import React from 'react';\r\nimport './QuestionBlock.css';\r\nimport AnswerList from '../AnswerList/AnswerList';\r\n\r\n\r\nconst QuestionBlock = (props) => (\r\n    <div className='question-block'>\r\n        <div className='question-title'>\r\n            {props.id}. {props.title}\r\n        </div>\r\n        <div className='current-question'>\r\n            <span>{`${props.currentQuestion} of ${props.totalLength}`}</span>\r\n        </div>\r\n        <AnswerList\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n            answerState={props.answerState}\r\n        />\r\n\r\n\r\n    </div>\r\n)\r\n\r\nexport default QuestionBlock;","import React from 'react';\r\nimport './FinishedLayout.css';\r\n\r\nconst FinishedLayouts = props => {\r\n    const result = props.result;\r\n    if (result < 7) {\r\n        return (\r\n            <div className='finished-block'>\r\n                <div className='result'> Your result is < strong > {props.result}</strong ></div>\r\n                <div className='advise'>Don't worry! You can try again.</div>\r\n                <div><button className='try-again' onClick={props.onRetry}>Try again!</button></div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='finished-block'>\r\n                < div className='result'> Congratulation! Your result is < strong > {props.result}</strong ></div >\r\n                <div className='advise'>You are cool!</div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n};\r\n\r\nexport default FinishedLayouts;","import React, { Component } from 'react';\r\nimport './Quiz.css';\r\nimport QuestionBlock from '../QuestionBlock/QuestionBlock';\r\nimport FinishedLayout from '../FinishedLayout/FinishedLayout';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        finished: false,\r\n        currentQuestion: 0,\r\n        answerState: null,\r\n        result: 0,\r\n        questions: [\r\n            {\r\n                title: 'Solve : 24 + 4 รท 4',\r\n                correctAnswer: 1,\r\n                id: 1,\r\n                answers: [\r\n                    { text: 25, id: 1 },\r\n                    { text: 6, id: 2 },\r\n                    { text: 28, id: 3 },\r\n                    { text: 7, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Solve : 24 + 4 รท 4 - (8 + 1)',\r\n                correctAnswer: 3,\r\n                id: 2,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 22, id: 2 },\r\n                    { text: 18, id: 3 },\r\n                    { text: 44, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Solve : sqrt(196)',\r\n                correctAnswer: 4,\r\n                id: 3,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 12, id: 2 },\r\n                    { text: 13, id: 3 },\r\n                    { text: 14, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Simplify : 3 + 6 x (5 + 4) รท 3 - 7',\r\n                correctAnswer: 2,\r\n                id: 4,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 14, id: 2 },\r\n                    { text: 16, id: 3 },\r\n                    { text: 15, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is the general equation of a straight line?',\r\n                correctAnswer: 2,\r\n                id: 5,\r\n                answers: [\r\n                    { text: ' y x y = x + 2', id: 1 },\r\n                    { text: ' y = mx + c', id: 2 },\r\n                    { text: ' y = 1', id: 3 },\r\n                    { text: ' y = 0', id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Solve: 5!',\r\n                correctAnswer: 4,\r\n                id: 6,\r\n                answers: [\r\n                    { text: 15, id: 1 },\r\n                    { text: 25, id: 2 },\r\n                    { text: 100, id: 3 },\r\n                    { text: 120, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Solve : log(100)',\r\n                correctAnswer: 2,\r\n                id: 7,\r\n                answers: [\r\n                    { text: 1, id: 1 },\r\n                    { text: 2, id: 2 },\r\n                    { text: 10, id: 3 },\r\n                    { text: 100, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'The sum of the triangle interior angles is ... ',\r\n                correctAnswer: 3,\r\n                id: 8,\r\n                answers: [\r\n                    { text: 90, id: 1 },\r\n                    { text: 360, id: 2 },\r\n                    { text: 180, id: 3 },\r\n                    { text: 240, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is the general equation of a straight line?',\r\n                correctAnswer: 2,\r\n                id: 9,\r\n                answers: [\r\n                    { text: ' y x y = x + 2', id: 1 },\r\n                    { text: ' y = mx + c', id: 2 },\r\n                    { text: ' y = 1', id: 3 },\r\n                    { text: ' y = 0', id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is 1004 divided by 2?',\r\n                correctAnswer: 2,\r\n                id: 10,\r\n                answers: [\r\n                    { text: 52, id: 1 },\r\n                    { text: 502, id: 2 },\r\n                    { text: 520, id: 3 },\r\n                    { text: 5002, id: 4 },\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    onAnswerClick = (answerId) => {\r\n        const activeQuestion = this.state.questions[this.state.currentQuestion];\r\n        console.log(answerId);\r\n\r\n        if (activeQuestion.correctAnswer === answerId) {\r\n            this.setState({\r\n                answerState: { [answerId]: 'true' },\r\n                result: this.state.result + 1\r\n            })\r\n        } else {\r\n            this.setState({\r\n                answerState: { [answerId]: 'false' }\r\n            })\r\n        }\r\n\r\n        const timeout = window.setTimeout(() => {\r\n            if (this.isGameFinished()) {\r\n                this.setState({\r\n                    finished: !this.state.finished\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    currentQuestion: this.state.currentQuestion + 1,\r\n                    answerState: null\r\n                })\r\n            }\r\n            window.clearTimeout(timeout)\r\n        }, 1300)\r\n\r\n\r\n    }\r\n\r\n    isGameFinished() {\r\n        return this.state.currentQuestion + 1 === this.state.questions.length\r\n    }\r\n\r\n    onRetry = () => {\r\n        this.setState({\r\n            finished: false,\r\n            currentQuestion: 0,\r\n            answerState: null,\r\n            result: 0,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='quiz'>\r\n                <div className='quiz-title'>Math Quiz</div>\r\n                {this.state.finished ?\r\n                    <FinishedLayout\r\n                        result={this.state.result}\r\n                        onRetry={this.onRetry} />\r\n\r\n                    : <QuestionBlock\r\n                        title={this.state.questions[this.state.currentQuestion].title}\r\n                        id={this.state.questions[this.state.currentQuestion].id}\r\n                        answers={this.state.questions[this.state.currentQuestion].answers}\r\n                        totalLength={this.state.questions.length}\r\n                        onAnswerClick={this.onAnswerClick}\r\n                        currentQuestion={this.state.currentQuestion + 1}\r\n                        answerState={this.state.answerState}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\nimport Dashboard from '../src/hoc/Dashboard/Dashboard';\nimport Quiz from './components/Quiz/Quiz';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard>\n        <Quiz />\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}