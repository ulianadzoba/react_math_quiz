{"version":3,"sources":["components/Navigation/MenuButton/MenuButton.js","components/Backdrop/Backdrop.js","components/Navigation/Menu/Menu.js","hoc/Dashboard/Dashboard.js","components/AnswerItem/AnswerItem.js","components/AnswerList/AnswerList.js","components/QuestionBlock/QuestionBlock.js","components/FinishedLayout/FinishedLayout.js","components/Quiz/Quiz.js","components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["MenuButton","props","classes","isOpen","push","className","join","onClick","openMenu","Backdrop","onClose","Menu","this","to","exact","activeClassName","closeMenu","Component","Dashboard","state","menu","menuHandler","setState","children","AnswerItem","answers","answerState","onAnswerClick","answer","id","text","AnswerList","map","answerId","key","QuestionBlock","title","currentQuestion","totalLength","FinishedLayouts","result","onRetry","Quiz","finished","questions","correctAnswer","activeQuestion","console","log","timeout","window","setTimeout","isGameFinished","clearTimeout","length","HomePage","App","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3537d97.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MenuButton.css';\r\n\r\nconst MenuButton = props => {\r\n    const classes = ['menu-button'];\r\n\r\n    if (props.isOpen) {\r\n        classes.push('fa fa-times')\r\n        classes.push('close')\r\n    } else {\r\n        classes.push('fa fa-bars')\r\n        classes.push('open')\r\n    }\r\n    return (\r\n        <i className={classes.join(' ')}\r\n            onClick={props.openMenu} />\r\n    )\r\n}\r\n\r\nexport default MenuButton;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n    return (\r\n        <div className='backdrop' onClick={props.onClose}></div>\r\n    )\r\n}\r\n\r\nexport default Backdrop;\r\n","import React, { Component } from 'react';\r\nimport './Menu.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Backdrop from '../../Backdrop/Backdrop';\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        const classes = ['menu'];\r\n        if (!this.props.isOpen) {\r\n            classes.push('hide-menu');\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <div className={classes.join(' ')}>\r\n                    <ul className='menu-list'>\r\n                        <li>\r\n                            <NavLink to='/' exact={true} activeClassName='active - link' onClick={this.props.closeMenu}>Home</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to='/quiz' exact={true} activeClassName='active - link' onClick={this.props.closeMenu}>Get started</NavLink>\r\n                        </li>\r\n                        {/* <li>\r\n                            <NavLink to='/login' exact={true} activeClassName='active - link' onClick={this.props.closeMenu}>Log in</NavLink>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n                {this.props.isOpen ? <Backdrop onClose={this.props.closeMenu} /> : null}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport './Dashboard.css';\r\nimport MenuButton from '../../components/Navigation/MenuButton/MenuButton';\r\nimport Menu from '../../components/Navigation/Menu/Menu';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    menuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    closeMenu = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className='dashboard'>\r\n                <MenuButton\r\n                    isOpen={this.state.menu}\r\n                    openMenu={this.menuHandler} />\r\n                <Menu\r\n                    isOpen={this.state.menu}\r\n                    closeMenu={this.closeMenu} />\r\n                {this.props.children}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n    const answers = []\r\n    if (props.answerState) {\r\n        answers.push(props.answerState)\r\n    }\r\n    return (\r\n        <li className={`answer-item ${answers.join('')}`}\r\n            onClick={() => props.onAnswerClick(props.answer.id)} >\r\n            {props.answer.text}\r\n        </li >\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport AnswerItem from '../AnswerItem/AnswerItem';\r\nimport './AnswerList.css';\r\n\r\nconst AnswerList = props => (\r\n    <ul className='answer-list'>\r\n        {props.answers.map((answer, answerId) => {\r\n            return (\r\n                <AnswerItem\r\n                    key={answerId}\r\n                    answer={props.answers[answerId]}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    answerState={props.answerState ? props.answerState[answer.id] : null}\r\n                />\r\n            )\r\n        })\r\n        }\r\n\r\n    </ul>\r\n\r\n)\r\n\r\nexport default AnswerList;","import React from 'react';\r\nimport './QuestionBlock.css';\r\nimport AnswerList from '../AnswerList/AnswerList';\r\n\r\n\r\nconst QuestionBlock = (props) => (\r\n    <div className='question-block'>\r\n        <div className='question-title'>\r\n            {props.id}. {props.title}\r\n        </div>\r\n        <div className='current-question'>\r\n            <span>{`${props.currentQuestion} of ${props.totalLength}`}</span>\r\n        </div>\r\n        <AnswerList\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n            answerState={props.answerState}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default QuestionBlock;","import React from 'react';\r\nimport './FinishedLayout.css';\r\n\r\nconst FinishedLayouts = props => {\r\n    const result = props.result;\r\n    if (result < 7) {\r\n        return (\r\n            <div className='finished-block'>\r\n                <div className='result'> Your result is < strong > {props.result}</strong ></div>\r\n                <div className='advise'>Don't worry! You can try again.</div>\r\n                <div><button className='try-again' onClick={props.onRetry}>Try again!</button></div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className='finished-block'>\r\n                <div className='result'> Congratulation! Your result is < strong > {props.result}</strong ></div >\r\n                <div className='advise'>You are cool!</div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default FinishedLayouts;","import React, { Component } from 'react';\r\nimport './Quiz.css';\r\nimport QuestionBlock from '../QuestionBlock/QuestionBlock';\r\nimport FinishedLayout from '../FinishedLayout/FinishedLayout';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        finished: false,\r\n        currentQuestion: 0,\r\n        answerState: null,\r\n        result: 0,\r\n        questions: [\r\n            {\r\n                title: 'Solve : 24 + 4 ÷ 4',\r\n                correctAnswer: 1,\r\n                id: 1,\r\n                answers: [\r\n                    { text: 25, id: 1 },\r\n                    { text: 6, id: 2 },\r\n                    { text: 28, id: 3 },\r\n                    { text: 7, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Solve : 24 + 4 ÷ 4 - (8 + 1)',\r\n                correctAnswer: 3,\r\n                id: 2,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 22, id: 2 },\r\n                    { text: 18, id: 3 },\r\n                    { text: 44, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Solve : sqrt(196)',\r\n                correctAnswer: 4,\r\n                id: 3,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 12, id: 2 },\r\n                    { text: 13, id: 3 },\r\n                    { text: 14, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Simplify : 3 + 6 x (5 + 4) ÷ 3 - 7',\r\n                correctAnswer: 2,\r\n                id: 4,\r\n                answers: [\r\n                    { text: 11, id: 1 },\r\n                    { text: 14, id: 2 },\r\n                    { text: 16, id: 3 },\r\n                    { text: 15, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is the general equation of a straight line?',\r\n                correctAnswer: 2,\r\n                id: 5,\r\n                answers: [\r\n                    { text: ' y x y = x + 2', id: 1 },\r\n                    { text: ' y = mx + c', id: 2 },\r\n                    { text: ' y = 1', id: 3 },\r\n                    { text: ' y = 0', id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'Solve: 5!',\r\n                correctAnswer: 4,\r\n                id: 6,\r\n                answers: [\r\n                    { text: 15, id: 1 },\r\n                    { text: 25, id: 2 },\r\n                    { text: 100, id: 3 },\r\n                    { text: 120, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'Solve : log(100)',\r\n                correctAnswer: 2,\r\n                id: 7,\r\n                answers: [\r\n                    { text: 1, id: 1 },\r\n                    { text: 2, id: 2 },\r\n                    { text: 10, id: 3 },\r\n                    { text: 100, id: 4 },\r\n                ]\r\n            },\r\n            {\r\n                title: 'The sum of the triangle interior angles is ... ',\r\n                correctAnswer: 3,\r\n                id: 8,\r\n                answers: [\r\n                    { text: 90, id: 1 },\r\n                    { text: 360, id: 2 },\r\n                    { text: 180, id: 3 },\r\n                    { text: 240, id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is the general equation of a straight line?',\r\n                correctAnswer: 2,\r\n                id: 9,\r\n                answers: [\r\n                    { text: ' y x y = x + 2', id: 1 },\r\n                    { text: ' y = mx + c', id: 2 },\r\n                    { text: ' y = 1', id: 3 },\r\n                    { text: ' y = 0', id: 4 },\r\n                ]\r\n\r\n            },\r\n            {\r\n                title: 'What is 1004 divided by 2?',\r\n                correctAnswer: 2,\r\n                id: 10,\r\n                answers: [\r\n                    { text: 52, id: 1 },\r\n                    { text: 502, id: 2 },\r\n                    { text: 520, id: 3 },\r\n                    { text: 5002, id: 4 },\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    onAnswerClick = (answerId) => {\r\n        const activeQuestion = this.state.questions[this.state.currentQuestion];\r\n        console.log(answerId);\r\n\r\n        if (activeQuestion.correctAnswer === answerId) {\r\n            this.setState({\r\n                answerState: { [answerId]: 'true' },\r\n                result: this.state.result + 1\r\n            })\r\n        } else {\r\n            this.setState({\r\n                answerState: { [answerId]: 'false' }\r\n            })\r\n        }\r\n\r\n        const timeout = window.setTimeout(() => {\r\n            if (this.isGameFinished()) {\r\n                this.setState({\r\n                    finished: !this.state.finished\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    currentQuestion: this.state.currentQuestion + 1,\r\n                    answerState: null\r\n                })\r\n            }\r\n            window.clearTimeout(timeout)\r\n        }, 1300)\r\n    }\r\n\r\n    isGameFinished() {\r\n        return this.state.currentQuestion + 1 === this.state.questions.length\r\n    }\r\n\r\n    onRetry = () => {\r\n        this.setState({\r\n            finished: false,\r\n            currentQuestion: 0,\r\n            answerState: null,\r\n            result: 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='quiz'>\r\n                <div className='quiz-title'>Math Quiz</div>\r\n                {this.state.finished ?\r\n                    <FinishedLayout\r\n                        result={this.state.result}\r\n                        onRetry={this.onRetry} />\r\n                    : <QuestionBlock\r\n                        title={this.state.questions[this.state.currentQuestion].title}\r\n                        id={this.state.questions[this.state.currentQuestion].id}\r\n                        answers={this.state.questions[this.state.currentQuestion].answers}\r\n                        totalLength={this.state.questions.length}\r\n                        onAnswerClick={this.onAnswerClick}\r\n                        currentQuestion={this.state.currentQuestion + 1}\r\n                        answerState={this.state.answerState}\r\n                    />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = props => {\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='home-page-title'>Welcome to Math Quiz</div>\r\n            <Link to=\"/quiz\">\r\n                <div className='home-button'>\r\n                    <button>Get started</button>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\nimport Dashboard from '../src/hoc/Dashboard/Dashboard';\nimport Quiz from './components/Quiz/Quiz';\nimport { Route, Switch } from 'react-router-dom';\n// import Auth from './components/Auth/Auth';\nimport HomePage from './components/HomePage/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/quiz\" exact component={Quiz} />\n          {/* <Route path=\"/login\" exact component={Auth} /> */}\n        </Switch>\n\n      </Dashboard>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}